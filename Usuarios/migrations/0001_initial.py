# Generated by Django 5.2.1 on 2025-08-31 02:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Roles_Permisos', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario con este correo electrónico.'}, help_text='Requerido. Usado para el inicio de sesión.', max_length=254, unique=True, verbose_name='dirección de correo electrónico')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='nombres')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='apellidos')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede iniciar sesión en el sitio de administración de Django.', verbose_name='es staff')),
                ('is_active', models.BooleanField(default=True, help_text='Designa si este usuario debe ser tratado como activo. Desmarque esto en lugar de eliminar cuentas.', verbose_name='activo')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='fecha de registro')),
                ('must_change_password', models.BooleanField(default=False, verbose_name='Debe Cambiar Contraseña')),
                ('tipo_documento', models.CharField(blank=True, choices=[('CC', 'Cédula de Ciudadanía'), ('TI', 'Tarjeta de Identidad'), ('CE', 'Cédula de Extranjería'), ('NIT', 'NIT'), ('PAS', 'Pasaporte'), ('PPT', 'Permiso por Protección Temporal')], max_length=3, null=True, verbose_name='tipo de documento')),
                ('numero_documento', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='número de documento')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='teléfono')),
                ('direccion', models.CharField(blank=True, max_length=255, null=True, verbose_name='dirección')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('rol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='Roles_Permisos.rol', verbose_name='Rol del Usuario')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario del Sistema',
                'verbose_name_plural': 'Usuarios del Sistema',
                'ordering': ['email'],
            },
        ),
    ]
